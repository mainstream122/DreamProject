<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	
	<!-- DB 설정 추가 -->
	
	<!-- Datasource 설정 추가 -->
	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.201.20:1521:XE" />
		<property name="username" value="DREAM" />
		<property name="password" value="DREAM" />
	</bean>
	
	<!-- SqlSessionFactory 설정 -->
	<bean id="sqlSeesionFactory"	class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="configLocation" value="classpath:/mybatis.xml"/>
	</bean>
	
	<!-- SqlSessionTemplate 설정 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSeesionFactory" />
	</bean>
	
	<!-- Transaction 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource" />
	</bean>
	
	<!-- Transaction 대상 메소드 지정 -->
	<!-- name 에 create 로 시작하는 모든 트랜잭션 에서 runtime 오류가 걸리면 롤백해라 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" rollback-for="RuntimeException" />
			<tx:method name="read*" read-only="true" />
			<tx:method name="update*" rollback-for="RuntimeException" />
			<tx:method name="delete*" rollback-for="RuntimeException" />
		</tx:attributes>
	</tx:advice>
	
	<!-- transaction 대상 클래스/메소드 설정 -->
	<aop:config>
		<aop:pointcut expression="execution(public * com.ktds..service.*ServiceImpl.*(..))" id="servicePointcut"/>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="servicePointcut"/>
	</aop:config>
	
	<bean id="mailSender" class ="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="dreamoverflows@gmail.com" />
      <property name="password" value="dream1234" />
      
      <property name="javaMailProperties">
         <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
         </props>
      </property>
    </bean>
</beans>
