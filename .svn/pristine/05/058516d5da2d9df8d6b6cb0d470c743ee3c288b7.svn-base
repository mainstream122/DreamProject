package com.ktds.member.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.ktds.member.service.MemberService;
import com.ktds.member.vo.MemberVO;

@Controller
public class MemberController {
	
	private MemberService memberService;
	
	public void setMemberService(MemberService memberService) {
		this.memberService =  memberService;
	}

	@RequestMapping("/")
	public String viewIndexPage() {
		
		return "index";
	}
	
	
	@RequestMapping("/member/signUp")
	public ModelAndView viewSignUpPage(MemberVO memberVO) {
		ModelAndView view = new ModelAndView();
		view.setViewName("member/signUp");
		view.addObject("memberVO", memberVO);
		return view;
	}
	
	@RequestMapping("/member/doSignUp")
	public String doSignUp(MemberVO memberVO, HttpSession session) {
		memberService.createMember(memberVO);
		MemberVO loginMemberVO = memberService.readOneMemberByIdAndPassword(memberVO);
		
		if( loginMemberVO != null) {
			session.setAttribute("_USER_", loginMemberVO);
			return "redirect:/member/emailComfirm";
		}
		return "redirect:/";
	}
	
	@RequestMapping("/member/login")
	public String viewLoginPage() {
		return "member/login";
	}
	
	@RequestMapping("/member/doLogin")
	public String doLogin(MemberVO memberVO, HttpSession session) {
		
		MemberVO loginMemberVO = memberService.readOneMemberByIdAndPassword(memberVO);
		
		if( loginMemberVO != null) {
			session.setAttribute("_USER_", loginMemberVO);
			return "redirect:/";
		}
		return "redirect:/member/login";
	}
	
	@RequestMapping("/member/logout")
	public String doLogout(HttpSession session) {
		session.invalidate();
		return "redirect:/";
	}
	
	@RequestMapping("/member/agreement")
	public String viewAgreement() {
	
		return "member/agreement";
	}
	
	@RequestMapping("/member/emailComfirm")
	public String emailConfirm() {
	
		return "member/emailComfirm";
	}
	
	@RequestMapping("/member/saveAddress")
	public String doSaveAddress(HttpServletRequest request, HttpSession session) {
		MemberVO memberVO = new MemberVO();
		memberVO.setAddress(request.getParameter("address"));
		memberVO.setMemberId(((MemberVO)session.getAttribute("_USER_")).getMemberId());
		
		memberService.updateAddressById(memberVO);
		return "redirect:/";
	}

	@RequestMapping("/juso")
	public String viewJusoPage() {
		return "common/juso";
	}
}
